{
  "openapi": "3.0.0",
  "info": {
    "title": "Desa Cantik API",
    "version": "1.0.0",
    "description": "API documentation for Desa Cantik App"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/surveyPeriods": {
      "get": {
        "summary": "Get all Survey Periods",
        "operationId": "getSurveyPeriods",
        "responses": {
          "200": {
            "description": "A list of Survey Periods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurveyPeriod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Survey Period",
        "operationId": "createSurveyPeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyPeriod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Survey Period created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/surveyPeriods/{id}": {
      "get": {
        "summary": "Get a Survey Period by ID",
        "operationId": "getSurveyPeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Survey Period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyPeriod"
                }
              }
            }
          },
          "404": {
            "description": "Survey Period not found"
          }
        }
      },
      "put": {
        "summary": "Update a Survey Period",
        "operationId": "updateSurveyPeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyPeriod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Survey Period updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyPeriod"
                }
              }
            }
          },
          "404": {
            "description": "Survey Period not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Survey Period",
        "operationId": "deleteSurveyPeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Survey Period deleted"
          },
          "404": {
            "description": "Survey Period not found"
          }
        }
      }
    },
    "/forms": {
      "get": {
        "summary": "Get all Forms",
        "operationId": "getForms",
        "responses": {
          "200": {
            "description": "A list of Forms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Form",
        "operationId": "createForm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Form created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        }
      }
    },
    "/forms/{id}": {
      "get": {
        "summary": "Get a Form by ID",
        "operationId": "getFormById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "404": {
            "description": "Form not found"
          }
        }
      },
      "put": {
        "summary": "Update a Form",
        "operationId": "updateForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Form updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          },
          "404": {
            "description": "Form not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Form",
        "operationId": "deleteForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Form deleted"
          },
          "404": {
            "description": "Form not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SurveyPeriod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "is_verif_end": {
            "type": "boolean",
            "default": false
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form"
            }
          }
        },
        "description": "A model representing a Survey Period to collect a data"
      },
      "Form": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "status": {
            "type": "string",
            "enum": ["BELUM_DIVERIFIKASI", "DIKIRIM_ULANG", "DITOLAK", "DISETUJUI"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "surveyPeriodId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "surveyPeriod": {
            "$ref": "#/components/schemas/SurveyPeriod"
          },
          "blokI": {
            "$ref": "#/components/schemas/BlokI"
          },
          "blokII": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlokII"
            }
          },
          "blokIII": {
            "$ref": "#/components/schemas/BlokIII"
          },
          "blokIV": {
            "$ref": "#/components/schemas/BlokIV"
          },
          "blokV": {
            "$ref": "#/components/schemas/BlokV"
          },
          "blokVI": {
            "$ref": "#/components/schemas/BlokVI"
          },
          "blokVII": {
            "$ref": "#/components/schemas/BlokVII"
          },
          "blokVIII": {
            "$ref": "#/components/schemas/BlokVIII"
          }
        },
        "description": "A model representing a Form application (kuesioner sent by user)"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "uniqueItems": true
          },
          "noHp": {
            "type": "string",
            "format": "phone",
            "nullable": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password (will be hashed by the server before storage)"
          },
          "role": {
            "type": "string",
            "enum": ["Pencacah", "Verifikator", "Admin"]
          },

          "id_pengawas": {
            "type": "integer",
            "nullable": true
          },
          "supervisedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "supervisor": {
            "$ref": "#/components/schemas/User"
          },
          "beban_kerja": {
            "type": "integer",
            "default": 0
          },
          "reset_token": {
            "type": "string",
            "nullable": true,
            "description": "Token used for password reset"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "description": "User's active status"
          },
          "is_acces_raw": {
            "type": "boolean",
            "default": false,
            "description": "User's can acces raw data?"
          },
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form"
            }
          }
        },
        "description": "A model representing a User application"
      },
      "BlokI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "dusun": {
            "type": "string"
          },
          "rw": {
            "type": "string"
          },
          "rt": {
            "type": "string"
          },
          "alamat": {
            "type": "string"
          },
          "koordinat": {
            "type": "string"
          },
          "formId": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true
          },
          "form": {
            "$ref": "#/components/schemas/Form"
          }
        },
        "description": "A model representing Blok I data (Keterangan Tempat)."
      },
      "BlokII": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "nama": {
            "type": "string"
          },
          "jenis_kelamin": {
            "type": "string",
            "enum": ["L", "P"]
          },
          "no_hp": {
            "type": "string",
            "format": "phone",
            "nullable": true
          },
          "no_kk": {
            "type": "string",
            "minLength": 16,
            "maxLength": 16
          },
          "nik": {
            "type": "string",
            "minLength": 16,
            "maxLength": 16
          },
          "tempat_lahir": {
            "type": "string"
          },
          "tanggal_lahir": {
            "type": "string",
            "format": "date"
          },
          "status_kk": {
            "type": "string",
            "enum": ["KEPALA_KELUARGA", "ISTRI", "ANAK", "CUCU", "MENANTU", "MERTUA", "ORANG_TUA", "FAMILI_LAIN"]
          },
          "status_kawin": {
            "type": "string",
            "enum": ["BELUM_KAWIN", "KAWIN", "CERAI_HIDUP", "CERAI_MATI"]
          },
          "kondisi_fisik": {
            "type": "string",
            "format": "textarea",
            "example": "Disabilitas Tunarungu, Disabilitas Tunawicara, Disabilitas Tunanetra, Disabilitas Tunadaksa, Disabilitas Mental, Disabilitas Intelektual, Gangguan Jiwa",
            "description": "Kondisi fisik yang dimiliki oleh responden (bisa banyak dipisahkan oleh koma)",
            "enum": ["Normal", "Disabilitas Tunarungu", "Disabilitas Tunawicara", "Disabilitas Tunanetra", "Disabilitas Tunadaksa", "Disabilitas Mental", "Disabilitas Intelektual", "Gangguan Jiwa"]
          },
          "agama": {
            "type": "string",
            "enum": ["ISLAM", "KRISTEN", "KATOLIK", "HINDU", "BUDHA", "KHONGHUCU", "KEPERCAYAAN"]
          },
          "pendidikan": {
            "type": "string",
            "enum": ["BELUM_atau_TIDAK_SEKOLAH", "BELUM_TAMAT_SD", "SD", "SMP", "SMA", "DI_atau_DII", "DIII", "DIV_atau_S1", "MAGISTER_atau_S2", "S3"]
          },
          "pekerjaan": {
            "type": "string",
            "enum": [
              "BELUM_atau_TIDAK_BEKERJA",
              "MENGURUS_RUMAH_TANGGA",
              "PELAJAR_atau_MAHASISWA",
              "BURUH_HARIAN_LEPAS",
              "KARYAWAN_SWASTA",
              "KARYAWAN_HONORER",
              "KARYAWAN_BUMN_atau_BUMD",
              "PENSIUNAN",
              "PETANI_PEMILIK_LAHAN",
              "PETANI_PENYEWA_LAHAN",
              "BURUH_TANI",
              "PEDAGANG_BARANG",
              "PEDAGANG_MAKANAN",
              "WIRASWASTA",
              "PEGAWAI_NEGERI_SIPIL",
              "DOKTER",
              "TENAGA_KESEHATAN",
              "TNI_atau_POLRI",
              "PERANGKAT_DESA",
              "PENSIUNAN",
              "GURU_SEKOLAH_UMUM",
              "GURU_AGAMA",
              "NELAYAN_PEMILIK_PERAHU",
              "NELAYAN_PENYEWA_PERHAU",
              "LAINNYA"
            ]
          },
          "pendapatan": {
            "type": "string",
            "enum": ["Rp0_sd_400000", "Rp400001_sd_800000", "Rp800001_sd_1200000", "Rp1200001_sd_1600000", "Rp1600001_sd_2000000", "Lebih_dari_Rp2000000"]
          },
          "pengeluaran": {
            "type": "string",
            "enum": ["Rp0_sd_400000", "Rp400001_sd_800000", "Rp800001_sd_1200000", "Rp1200001_sd_1600000", "Rp1600001_sd_2000000", "Lebih_dari_Rp2000000"]
          },
          "ibu": {
            "type": "string"
          },
          "ayah": {
            "type": "string"
          },
          "kartu_identitas": {
            "type": "string",
            "format": "textarea",
            "example": "Akta Kelahiran, KTP, Kartu Identitas Anak (KIA), KK",
            "description": "Kartu identitas yang dimiliki oleh responden (bisa banyak dipisahkan oleh koma)",
            "enum": ["Tidak Memiliki", "Akta Kelahiran", "KTP", "Kartu Identitas Anak (KIA)", "KK"]
          },
          "jaminan_kesehatan": {
            "type": "string",
            "format": "textarea",
            "example": "PBI_JKN, JKN_MANDIRI, JKN_PEMBERI_KERJA, JAMKES_LAINNYA",
            "description": "Jaminan kesehatan yang dimiliki oleh responden (bisa banyak dipisahkan oleh koma)",
            "enum": ["Tidak Memiliki", "PBI_JKN", "JKN_MANDIRI", "JKN_PEMBERI_KERJA", "JAMKES_LAINNYA"]
          },
          "penyakit_kronis": {
            "type": "string",
            "format": "textarea",
            "example": "Asma, Jantung, Diabetes, TBC, Stroke, Kanker/Tumor, Gagal_ginjal, HIV/AIDS, Lainnya",
            "description": "Penyakit kronis yang dimiliki oleh responden (bisa banyak dipisahkan oleh koma)",
            "enum": ["Tidak ada", "Asma", "Jantung", "Diabetes", "TBC", "Stroke", "Kanker/Tumor", "Gagal_ginjal", "HIV/AIDS", "Lainnya"]
          },
          "formId": {
            "type": "integer",
            "format": "int64"
          },
          "form": {
            "$ref": "#/components/schemas/Form"
          },
          "is_under_four": {
            "type": "boolean"
          },
          "order": {
            "type": "integer"
          }
        },
        "description": "A model representing Blok II data (Informasi Rinci Anggota Keluarga). The combination of 'formId' and 'order' must be unique."
      },
      "BlokIII": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          },
          "status_rumah": {
            "type": "string",
            "enum": ["MILIK_SENDIRI", "KONTRAK_atau_SEWA", "BEBAS_SEWA_atau_MENUMPANG", "RUMAH_DINAS"]
          },
          "bukti_kepemilikan": {
            "type": "string",
            "enum": ["SHM_an_SENDIRI", "SHM_an_ANGGOTA_KELUARGA", "SHM_an_BUKAN_ANGGOTA_KELUARGA", "GIRIK_atau_LETTER_C"]
          },
          "luas_bangunan": {
            "type": "string",
            "format": "number"
          },
          "luas_lahan": {
            "type": "string",
            "format": "number"
          },
          "jumlah_kamar": {
            "type": "integer",
            "format": "int64"
          },
          "dinding_terluas": {
            "type": "string",
            "enum": ["TEMBOK", "KAYU_atau_PAPAN", "ANYAMAN_BAMBU", "GYSUM_atau_GCR_atau_CALCIBOARD", "LAINNYA"]
          },
          "lantai_terluas": {
            "type": "string",
            "enum": ["KERAMIK", "MARMER_atau_GRANIT", "TANAH", "UBIN_atau_TEGEL", "PLESTER_SEMEN", "LAINNYA"]
          },
          "atap_terluas": {
            "type": "string",
            "enum": ["GENTENG", "ASBES", "SENG", "JERAMI_atau_IJUK", "BETON", "LAINNYA"]
          },
          "jamban": {
            "type": "string",
            "enum": ["MILIK_SENDIRI", "NUMPANG", "TIDAK_ADA"]
          },
          "daya_listrik": {
            "type": "string",
            "enum": ["D_450_watt", "D_900_watt", "D_1300_watt", "D_2200_watt", "Lebih_dari_2200_watt", "NYAMBUNG", "BELUM_ADA_ALIRAN_LISTRIK"]
          },
          "sumber_air_minum": {
            "type": "string",
            "enum": ["AIR_KEMASAN_BERMEREK", "AIR_ISI_ULANG", "SUMUR_TERLINDUNGI", "SUMUR_BOR_atau_POMPA", "SUNGAI_atau_IRIGASI", "PDAM_atau_LEDING"]
          },
          "bahan_bakar_masak": {
            "type": "string",
            "enum": ["GAS_3_KG", "GAS_5_koma_5_KG", "GAS_12_KG", "KAYU_BAKAR", "LAINNYA"]
          },
          "foto1": {
            "type": "string",
            "format": "uri",
            "description": "Foto Rumah Responden (Depan)"
          },
          "foto2": {
            "type": "string",
            "format": "uri",
            "description": "Foto Rumah Responden (Samping)"
          },
          "foto3": {
            "type": "string",
            "format": "uri",
            "description": "Foto Rumah Responden (Dalam)"
          },
          "formId": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true
          },
          "form": {
            "$ref": "#/components/schemas/Form"
          }
        },
        "description": "A model representing Blok III data (Kondisi Rumah)."
      },
      "BlokIV": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "description": "Auto-incremented unique identifier"
          }
        }
      },
      "BlokV": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BlokVI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BlokVII": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BlokVIII": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
